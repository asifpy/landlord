"""
Django settings for landlord project.

Generated by 'django-admin startproject' using Django 1.11.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import environ
import os
import datetime
import raven
import logging.config
from django.utils.log import DEFAULT_LOGGING


ROOT_DIR = environ.Path(__file__) - 4
APPS_DIR = ROOT_DIR.path('server/landlord')

# Load operating system environment variables and then prepare to use them
env = environ.Env()
environ.Env.read_env()  # reading .env file

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DJANGO_DEBUG', False)
SECRET_KEY = env(
    'DJANGO_SECRET_KEY',
    default='r%-umg#!vj0yr&u3ncy$kn901%p=1(*9)yro^23x!a!%)zva86'
)

# Application definition

DJANGO_PACKAGES = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

EXTERNAL_PACKAGES = [
    'rest_framework',
    'rest_auth',
    'corsheaders',
    'django.contrib.sites',  # for registration app to work
    'allauth',
    'allauth.account',
    'rest_auth.registration'
]

PROJECT_APPS = ['core']

INSTALLED_APPS = DJANGO_PACKAGES + EXTERNAL_PACKAGES + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'landlord.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'landlord.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

LOCAL_DB = 'postgres://sa:sa@localhost/landlord'

DATABASES = {
    'default': env.db('DATABASE_URL', default=LOCAL_DB),
}


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# Configure the JWTs to expire after 1 hour, and allow users to
# refresh near-expiration tokens

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=1),
    'JWT_ALLOW_REFRESH': True,
}

# Make JWT Auth the default authentication mechanism for Django
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),

    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning'
}

# Enables django-rest-auth to use JWT tokens instead of regular tokens.
REST_USE_JWT = True

SITE_ID = 1

# disable email notification on django-allauth
EMAIL_VERIFICATION = 'optional'

CORS_ORIGIN_ALLOW_ALL = True

# MOVE LOGGING TO PRODUCTION SETTINGS
INSTALLED_APPS += ['raven.contrib.django.raven_compat']
MIDDLEWARE += [
    'raven.contrib.django.raven_compat.middleware.SentryResponseErrorIdMiddleware'
]

SENTRY_DSN = env('DJANGO_SENTRY_DSN')

# due to the bug in django-environ, use the regural os.path
# https://github.com/joke2k/django-environ/pull/107
RAVEN_CONFIG = {
    'dsn': SENTRY_DSN,
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
}

LOGGING_CONFIG = None
sentry_handler = 'raven.contrib.django.raven_compat.handlers.SentryHandler'
logging.config.dictConfig({
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {

        'django.server': DEFAULT_LOGGING['formatters']['django.server'],
        'console': {
            # exact format is not important, this is the minimum information
            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'console',
        },
        # Add Handler for Sentry for `debug` and above
        'sentry': {
            'level': 'DEBUG',
            'class': sentry_handler,
        },
        'django.server': DEFAULT_LOGGING['handlers']['django.server'],
    },
    'loggers': {
        # root logger
        '': {
            'level': 'WARNING',
            'handlers': ['console', 'sentry'],
        },
        'django.server': DEFAULT_LOGGING['loggers']['django.server'],

        # 'landlord': {
        #     'level': 'INFO',
        #     'handlers': ['console', 'sentry'],
        #     # required to avoid double logging with root logger
        #     'propagate': False,
        # },
    },
})
